import{_ as e,c as i,a3 as r,o}from"./chunks/framework.BaR4VHXY.js";const b=JSON.parse('{"title":"SpringBoot","description":"","frontmatter":{"Created at":"2019-04-09T00:00:00.000Z","Last updated at":"2019-05-20T00:00:00.000Z","tags":["redis","springboot","lombok","mybatis二级缓存","spring缓存"]},"headers":[],"relativePath":"zh-CN/学习笔记/SpringBoot.md","filePath":"zh-CN/学习笔记/SpringBoot.md","lastUpdated":null}'),t={name:"zh-CN/学习笔记/SpringBoot.md"};function s(n,a,d,l,p,h){return o(),i("div",null,a[0]||(a[0]=[r('<h1 id="springboot" tabindex="-1">SpringBoot <a class="header-anchor" href="#springboot" aria-label="Permalink to &quot;SpringBoot&quot;">​</a></h1><h2 id="springboot-1" tabindex="-1">SpringBoot <a class="header-anchor" href="#springboot-1" aria-label="Permalink to &quot;SpringBoot&quot;">​</a></h2><h4 id="application-properties" tabindex="-1">application.properties <a class="header-anchor" href="#application-properties" aria-label="Permalink to &quot;application.properties&quot;">​</a></h4><h4 id="lombok" tabindex="-1">lombok <a class="header-anchor" href="#lombok" aria-label="Permalink to &quot;lombok&quot;">​</a></h4><p>在pom里加入后在实体类前加入@Data，可不用写Getter和Setter和toString方法</p><h4 id="redis实现mybatis二级缓存" tabindex="-1">redis实现mybatis二级缓存 <a class="header-anchor" href="#redis实现mybatis二级缓存" aria-label="Permalink to &quot;redis实现mybatis二级缓存&quot;">​</a></h4><p>cache是高速缓冲寄存器，主要解决频繁使用的数据能够被快速访问的问题。 操作系统缓存：减少磁盘操作。 数据库缓存：减少应用程序对数据库的IO操作。 web服务器缓存：减轻web服务器的压力。 cdn缓存：增加用户的体验。 浏览器缓存：增加用户的体验，减轻服务器压力。</p><h5 id="一级缓存-自带" tabindex="-1">一级缓存(自带) <a class="header-anchor" href="#一级缓存-自带" aria-label="Permalink to &quot;一级缓存(自带)&quot;">​</a></h5><p>一级缓存，基于一次数据库连接会话。</p><h5 id="二级缓存-单redis版" tabindex="-1">二级缓存(单redis版) <a class="header-anchor" href="#二级缓存-单redis版" aria-label="Permalink to &quot;二级缓存(单redis版)&quot;">​</a></h5><p>二级缓存的配置，二级缓存依赖第三方存储。</p><h4 id="redis实现spring缓存" tabindex="-1">redis实现spring缓存 <a class="header-anchor" href="#redis实现spring缓存" aria-label="Permalink to &quot;redis实现spring缓存&quot;">​</a></h4><h5 id="service层缓存-单redis版" tabindex="-1">service层缓存(单redis版) <a class="header-anchor" href="#service层缓存-单redis版" aria-label="Permalink to &quot;service层缓存(单redis版)&quot;">​</a></h5><ol><li>在SpringBoot启动类添加注解@EnableCaching</li><li>删除mapper.xml上的cache，若没有则无视</li><li>修改RedisConfig,注释掉集群版getjedisConnectionFactory()</li></ol><h4 id="redis实现缓存集群版" tabindex="-1">redis实现缓存集群版 <a class="header-anchor" href="#redis实现缓存集群版" aria-label="Permalink to &quot;redis实现缓存集群版&quot;">​</a></h4><p>修改RedisConfig即可，注释掉原来的getjedisConnectionFactory()</p>',16)]))}const m=e(t,[["render",s]]);export{b as __pageData,m as default};
