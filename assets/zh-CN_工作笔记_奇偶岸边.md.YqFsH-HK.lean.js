import{_ as e,c as o,a3 as r,o as n}from"./chunks/framework.BaR4VHXY.js";const c=JSON.parse('{"title":"奇偶岸边","description":"","frontmatter":{"Created at":"2021-09-24T00:00:00.000Z","Last updated at":"2021-11-10T00:00:00.000Z","Source URL":"https://stackoverflow.com/questions/29294045/how-to-open-two-instances-of-chrome-kiosk-mode-in-different-displays-windows","tags":["shell","cmd","浏览器","全屏","vb"]},"headers":[],"relativePath":"zh-CN/工作笔记/奇偶岸边.md","filePath":"zh-CN/工作笔记/奇偶岸边.md","lastUpdated":null}'),i={name:"zh-CN/工作笔记/奇偶岸边.md"};function a(p,t,s,d,u,m){return n(),o("div",null,t[0]||(t[0]=[r('<h1 id="奇偶岸边" tabindex="-1">奇偶岸边 <a class="header-anchor" href="#奇偶岸边" aria-label="Permalink to &quot;奇偶岸边&quot;">​</a></h1><h4 id="浏览器启动参数" tabindex="-1">浏览器启动参数 <a class="header-anchor" href="#浏览器启动参数" aria-label="Permalink to &quot;浏览器启动参数&quot;">​</a></h4><pre><code>	演示模式 `--kiosk`\n\n\n	全屏启动 `--start-fullscreen`\n\n	最大化启动 `--start-maximized`\n\n	指定位置启动 `--window-position=x,y`\n\n	指定窗口大小启动 `--window-size=w,h`\n\n	用户文件存储位置 `--user-data-dir=f:/monitor1`\n\n	影子模式 `--incognito`\n</code></pre><h4 id="一键脚本" tabindex="-1">一键脚本 <a class="header-anchor" href="#一键脚本" aria-label="Permalink to &quot;一键脚本&quot;">​</a></h4><p>注：一定要按顺序，不然不生效 用户文件存储位置配好才能显示两个屏，不然会出现在上一个屏上</p><ul><li><p>生成脚本</p><p>@echo off ::浏览器安装路径 set tempTargetPath=&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot; ::需要修改的变量 if &quot;%~1&quot;==&quot;&quot; (set windowPosition=0,0) else (set windowPosition=%~1) if &quot;%~2&quot;==&quot;&quot; (set portIndex=0) else (set portIndex=%~2) if &quot;%~3&quot;==&quot;&quot; (set configInfo=&quot;&quot;) else (set configInfo=%~3) ::不用修改的变量 set tempHtmlUrl=%~dp0loading.html set tempHtmlUrl=%tempHtmlUrl:=/% set tempUserDataDir=%~dp0monitor/%portIndex% set tempLink=monitor_%portIndex%.lnk ::本机IP和时间 ::for /f &quot;tokens=16&quot; %%i in (&#39;ipconfig ^|find /i &quot;ipv4&quot;&#39;) do set clientIP=%%i set tempArguments=&quot; --app=%tempHtmlUrl%?p=%portIndex%&amp;c=%configInfo:&quot;=% --window-position=%windowPosition% --kiosk --user-data-dir=%tempUserDataDir% portIndex%portIndex%&quot; ::删除 临时目录 下所有文件 ::del /s /f /q &quot;%~dp0monitor%portIndex%*.*&quot; ::删除 临时目录 下所有文件夹 ::rd /s /q &quot;%~dp0monitor%portIndex%&quot; ::删除 临时快捷方式 ::del %tempLink% ::场景临时目录 md %~dp0monitor md %tempUserDataDir% ::创建生成脚本 echo Set oWS=WScript.CreateObject(&quot;WScript.Shell&quot;) &gt; CreateShortcut_%portIndex%.vbs echo Set oLink=oWS.CreateShortcut(&quot;%tempLink%&quot;) &gt;&gt; CreateShortcut_%portIndex%.vbs echo oLink.TargetPath=%tempTargetPath% &gt;&gt; CreateShortcut_%portIndex%.vbs echo oLink.Arguments=%tempArguments% &gt;&gt; CreateShortcut_%portIndex%.vbs echo oLink.Save &gt;&gt; CreateShortcut_%portIndex%.vbs echo oWS.Run &quot;%tempLink%&quot; &gt;&gt; CreateShortcut_%portIndex%.vbs ::执行生成脚本 cscript CreateShortcut_%portIndex%.vbs ::删除生成脚本 del CreateShortcut_%portIndex%.vbs</p></li><li><p>销毁单个脚本</p><p>@echo off ::需要修改的变量 if &quot;%~1&quot;==&quot;&quot; (set portIndex=0) else (set portIndex=%~1) wmic process where &quot;name=&#39;chrome.exe&#39; and commandline like &#39;%%portIndex%portIndex%%%&#39;&quot; delete ::不用修改的变量 set tempLink=monitor_<em>.lnk ::删除 临时目录 下所有文件 del /s /f /q &quot;%~dp0monitor%portIndex%*.</em>&quot; ::删除 临时目录 下所有文件夹 rd /s /q &quot;%~dp0monitor%portIndex%&quot; ::删除 临时快捷方式 del %tempLink%</p></li><li><p>销毁全部脚本</p><p>@echo off ::需要修改的变量 if &quot;%~1&quot;==&quot;&quot; (set tempExe=chrome.exe) else (set tempExe=%~1) taskkill /f /im %tempExe% ::不用修改的变量 set tempLink=monitor_<em>.lnk ::删除 临时目录 下所有文件 del /s /f /q &quot;%~dp0monitor*.</em>&quot; ::删除 临时目录 下所有文件夹 rd /s /q &quot;%~dp0monitor&quot; ::删除 临时快捷方式 del %tempLink% exit</p></li></ul>',6)]))}const q=e(i,[["render",a]]);export{c as __pageData,q as default};
