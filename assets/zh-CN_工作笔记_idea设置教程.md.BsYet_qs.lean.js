import{_ as a,c as t,a3 as r,o as i}from"./chunks/framework.BaR4VHXY.js";const u=JSON.parse('{"title":"idea设置教程","description":"","frontmatter":{"Created at":"2019-04-01T00:00:00.000Z","Last updated at":"2023-03-29T00:00:00.000Z","Source URL":"https://plugins.jetbrains.com/plugin/185-generateserialversionuid","tags":["idea","使用设置"]},"headers":[],"relativePath":"zh-CN/工作笔记/idea设置教程.md","filePath":"zh-CN/工作笔记/idea设置教程.md","lastUpdated":null}'),l={name:"zh-CN/工作笔记/idea设置教程.md"};function n(o,e,s,d,p,h){return i(),t("div",null,e[0]||(e[0]=[r(`<h1 id="idea设置教程" tabindex="-1">idea设置教程 <a class="header-anchor" href="#idea设置教程" aria-label="Permalink to &quot;idea设置教程&quot;">​</a></h1><h4 id="idea设置教程-1" tabindex="-1">idea设置教程 <a class="header-anchor" href="#idea设置教程-1" aria-label="Permalink to &quot;idea设置教程&quot;">​</a></h4><p><a href="https://blog.csdn.net/fanrenxiang/article/details/80503490" target="_blank" rel="noreferrer">idea使用教程</a></p><p><a href="https://blog.csdn.net/RobertoHuang/article/details/75042116" target="_blank" rel="noreferrer">idea基本设置</a></p><p><a href="https://blog.csdn.net/zxfly6/article/details/82112322" target="_blank" rel="noreferrer">idea快捷键使用eclipse</a></p><p><a href="https://blog.csdn.net/best_luxi/article/details/81253316" target="_blank" rel="noreferrer">idea去除提示的线</a></p><h5 id="mysql" tabindex="-1">mysql <a class="header-anchor" href="#mysql" aria-label="Permalink to &quot;mysql&quot;">​</a></h5><p>安装前一定要确定完全卸载，运行项目无报错但一直转圈可能是数据库连接有问题，确认连接的是本地还是服务器</p><h4 id="maven注册本地包" tabindex="-1">maven注册本地包 <a class="header-anchor" href="#maven注册本地包" aria-label="Permalink to &quot;maven注册本地包&quot;">​</a></h4><pre><code>mvn install:install-file -DgroupId=com.minyuan -DartifactId=log-handle -Dversion=1.0.0 -Dpackaging=jar -Dfile=log-handle-1.0.0.jar
</code></pre><h5 id="设置自动编译" tabindex="-1">设置自动编译 <a class="header-anchor" href="#设置自动编译" aria-label="Permalink to &quot;设置自动编译&quot;">​</a></h5><p>1.Setting--&gt;Builder--&gt;Compiler--&gt;Build project automatically 2.mvn clean||mvn install</p><h5 id="设置console自动换行" tabindex="-1">设置console自动换行 <a class="header-anchor" href="#设置console自动换行" aria-label="Permalink to &quot;设置console自动换行&quot;">​</a></h5><p>Setting-&gt;Editor-&gt;General-&gt;Console--&gt;Use soft wrops in console</p><h5 id="设置代码提示不区分大小写" tabindex="-1">设置代码提示不区分大小写 <a class="header-anchor" href="#设置代码提示不区分大小写" aria-label="Permalink to &quot;设置代码提示不区分大小写&quot;">​</a></h5><p>Setting-&gt;Editor-&gt;General-&gt;Code Completion-&gt;取消勾选Match case</p><h5 id="jdk设置" tabindex="-1">JDK设置 <a class="header-anchor" href="#jdk设置" aria-label="Permalink to &quot;JDK设置&quot;">​</a></h5><p><a href="https://blog.csdn.net/fanrenxiang/article/details/80676262" target="_blank" rel="noreferrer">JDK设置</a></p><h5 id="隐藏-iml和-idea等自动生成文件" tabindex="-1">隐藏.iml和.idea等自动生成文件 <a class="header-anchor" href="#隐藏-iml和-idea等自动生成文件" aria-label="Permalink to &quot;隐藏.iml和.idea等自动生成文件&quot;">​</a></h5><p>设置-&gt;File Types-&gt;出现上图所示，在底部ingore files加入你要忽略的文件*.idea;*.iml;并应用即可</p><h5 id="如何快速查看当前类中的所有方法" tabindex="-1">如何快速查看当前类中的所有方法？ <a class="header-anchor" href="#如何快速查看当前类中的所有方法" aria-label="Permalink to &quot;如何快速查看当前类中的所有方法？&quot;">​</a></h5><p>快捷键 Alt+7</p><h5 id="快速生成main方法、for循环、foreach循环、out输出" tabindex="-1">快速生成main方法、for循环、foreach循环、out输出 <a class="header-anchor" href="#快速生成main方法、for循环、foreach循环、out输出" aria-label="Permalink to &quot;快速生成main方法、for循环、foreach循环、out输出&quot;">​</a></h5><p>psvm、fori、iter、soutp</p><h5 id="部署tomcat、web项目" tabindex="-1">部署tomcat、web项目 <a class="header-anchor" href="#部署tomcat、web项目" aria-label="Permalink to &quot;部署tomcat、web项目&quot;">​</a></h5><p><a href="https://blog.csdn.net/fanrenxiang/article/details/79588020" target="_blank" rel="noreferrer">部署tomcat、web项目</a></p><h5 id="优秀插件推荐" tabindex="-1">优秀插件推荐 <a class="header-anchor" href="#优秀插件推荐" aria-label="Permalink to &quot;优秀插件推荐&quot;">​</a></h5><p>Setting-&gt;Plugins-&gt;Brower repositories-&gt;搜索插件名-点击install按钮后，安装完毕，重启intellij idea即可</p><ul><li><p>知了库 <a href="https://plugins.zhile.io" target="_blank" rel="noreferrer">https://plugins.zhile.io</a> IDE Eval Reset</p></li><li><p><strong>Translation</strong> 翻译插件，不用来回切换翻译软件，直接就能在IDE中使用。中英互译、句子并感情朗读</p></li><li><p>Background Image Plus 把单调背景换成自己喜欢的图</p></li><li><p><strong>Rainbow Brackets</strong> 彩虹颜色括号，安装这个插件后代码里的括号就变成了彩虹色，看着非常舒服</p></li><li><p><strong>String Manipulation</strong> 强大的字符串转换工具。使用快捷键，Alt+m。</p></li><li><p><strong>Quick File Preview</strong> 类似VScode文件夹展开方式</p></li><li><p><strong>Material Theme UI</strong> 主题</p></li><li><p>JSON Parser json转换</p></li><li><p>Alibaba Java Coding Guidelines alibaba开源的插件，可以check代码中存在的问题，快速生成注释等</p></li><li><p>RestfulToolkit http 简单请求工具</p></li><li><p>GenerateAllSetter 一键生成某对象的所有set方法并赋予默认值，new一个对象，快速生成这个对象的所有set方法 （鼠标定位到对象名，按住Alt+Enter快捷键，选择generate all setter即可）</p></li><li><p>GenerateSerialVersionUID 快速生成SerialVersionUID</p></li><li><p>GsonFormatPlus 这个插件可以快速的帮你由json结构生成java类，把标准的json数据copy到快捷键Alt+s弹出来的文本框中</p></li><li><p>Maven Helper Maven是个很好用的依赖管理工具，但是再好的东西也不是完美的。Maven的依赖机制会导致Jar包的冲突。举个例子，现在你的项目中，使用了两个Jar包，分别是A和B。现在A需要依赖另一个Jar包C，B也需要依赖C。但是A依赖的C的版本是1.0，B依赖的C的版本是2.0。这时候，Maven会将这1.0的C和2.0的C都下载到你的项目中，这样你的项目中就存在了不同版本的C，这时Maven会依据依赖路径最短优先原则，来决定使用哪个版本的Jar包，而另一个无用的Jar包则未被使用，这就是所谓的依赖冲突。</p></li></ul><h4 id="react相关插件" tabindex="-1">react相关插件 <a class="header-anchor" href="#react相关插件" aria-label="Permalink to &quot;react相关插件&quot;">​</a></h4><ul><li>React CSS Modules</li><li>React Native Console</li><li>React snippets</li><li>React-Templates</li></ul><h5 id="设置注释模板" tabindex="-1">设置注释模板 <a class="header-anchor" href="#设置注释模板" aria-label="Permalink to &quot;设置注释模板&quot;">​</a></h5><p>类模板:Setting-&gt;Editor-&gt;File and Code Template-&gt;Include-&gt;File Header</p><pre><code>/**
 * @Title: \${NAME}
 * @Description: TODO(  )
 * @Date: \${DATE} \${TIME}
 * @Author: hsy
 */
</code></pre><p>方法模板:Setting-&gt;Editor-&gt;Live Templates-&gt;+Template Group -&gt;+Live Template</p><pre><code>**
 * @Title: $description$
 * @Description: TODO(  )
 * @Date: $date$ $time$
 * @Author: hsy
$params$
 * @Return $return$
 */ 
</code></pre><p>![[../_resources/unknown_filename-61daa1be.png]]</p><pre><code>groovyScript(&quot;def result=&#39;&#39;; def params=\\&quot;\${_1}\\&quot;.replaceAll(&#39;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList(); for(i = 0; i &lt; params.size(); i++) {result+=&#39; * @Param &#39; + params[i] + ((i &lt; params.size() - 1) ? &#39;\\\\n&#39; : &#39;&#39;)}; return result&quot;, methodParameters())


    // 功能测试======================start======================	
    // 功能测试=======================end=======================
    // 异常测试======================start======================
    // 异常测试=======================end=======================
    // 忽略测试======================start======================
    // 忽略测试=======================end=======================
</code></pre>`,38)]))}const g=a(l,[["render",n]]);export{u as __pageData,g as default};
